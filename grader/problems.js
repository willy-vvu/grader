problems=

[{"title":"(*) Keyboard","statement":"If you have <code>int k<\/code> keyboards each with <code>int x<\/code> keys, how many keys do you have in total?<br \/><br \/><em>Learn more about arithmetic operators at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/variables<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/373\/-1","defaultCode":"\/\/you do not need to declare k and x\n\/\/just use them in this println:\nprintln(???);"},{"title":"(%) Hot Dogs","statement":"Hot dogs that come in packs of 10. You buy (<code>int hotDogPacks<\/code>) packs. What's the remainder after you divide the number of hot dogs by 8 (The buns come in packs of 8)?<br \/><br \/><em>Learn more about arithmetic operators at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/variables<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/374\/-1","defaultCode":"\/\/use int hotDogPacks\nprintln(???);"},{"title":"(+) Plural","statement":"You are given a <code>String word<\/code>. Make word plural by concatenating (adding) the character \"s\" to the end.<br \/><br \/><em>Learn more about concatenation at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/strings<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/375\/-1","defaultCode":"\/\/use String word\nprintln(???);"},{"title":"(==) Gummy Bears","statement":"You have <code>int g<\/code> gummy bears to be divided evenly among <code>int p<\/code> people. Print whether it is possible to do this without any gummy bears left over (or splitting a bear). Your output should be true or false.<br \/><br \/><em>Learn more about boolean operators at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/variables<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/376\/-1","defaultCode":"\/\/use int g and int p\nprintln(???);"},{"title":"(&&) Snow Chance","statement":"If it is raining and it is cold, chances are that it will snow. Use <code>boolean raining<\/code> and <code>boolean cold<\/code>, and print whether both are true.<br \/><br \/><em>Learn more about boolean operators at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/variables<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/377\/-1","defaultCode":"\/\/use boolean raining and boolean cold\nprintln(???);"},{"title":"(||) Jacket","statement":"You will need to wear a jacket if it is raining OR it is cold. Use <code>boolean raining<\/code> and <code>boolean cold<\/code>, and print whether either is true.<br \/><br \/><em>Learn more about boolean operators at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/variables<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/378\/-1","defaultCode":"\/\/use boolean raining and boolean cold\nprintln(???);"},{"title":"(if) Starcraft","statement":"In a game of Starcraft, the player with more supply is generally more likely to win. Player a has a supply of <code>int a<\/code> and Player b has a supply of <code>int b<\/code>. Println the character 'a' if Player a has more supply. Println 'b' if player b has more supply. If they're equal, println 'c'.<br \/><br \/><em>Learn more about if statements at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/variables<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/379\/-1","defaultCode":""},{"title":"(loop) Derp","statement":"Println the word \"Derp\" repeated <code>int n<\/code> times. (ex: if n=3, println(\"DerpDerpDerp\");) To concatenate Strings, use the '+' sign. For example, \"Derp\"+\"Derp\" becomes \"DerpDerp\".<br \/><br \/><em>Learn more about loops at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/380\/-1","defaultCode":""},{"title":"(loop) Sum of Squares","statement":"Calculate the sum of the squares of all numbers from <code>int n<\/code> to <code>int m<\/code>. For example, if n were 1 and m were 3, then you would print the result of 1*1+2*2+3*3, which would be 14.<br \/><br \/><em>Learn more about loops at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/381\/-1","defaultCode":""},{"title":"(loop) Bank Interest","statement":"You have <code>double money<\/code> dollars in a bank that gives 5 percent interest every year, for <code>int time<\/code> years. Print the amount of money you will have in the bank at the end of that time. For example, if time were 1, then you should print 105.0<br \/><br \/><em>Learn more about loops at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/382\/-1","defaultCode":""},{"title":"(loop) Prime Range","statement":"Print the sum of all prime numbers between <code>int a<\/code> and <code>int b<\/code> (inclusive).<br \/><br \/><em>Learn more about loops at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/383\/-1","defaultCode":""},{"title":"(loop) Prime Digits","statement":"For all prime numbers between <code>int a<\/code> and <code>int b<\/code> (inclusive), find the first one with the smallest sum of digits. <em>For example if a is 300 and b is 331, the prime numbers are 307, 311, 313, and 317. Of those, 307 has digits of sum 10, 311 adds to 5, 313 adds to 7 and 317 adds to 11. So the answer you would print is 311 . You can use the \"break\" keyword to end a loop early.<\/em> If there are no primes in the range set the out to -1.<br \/><br \/><em>Learn more about loops at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/384\/-1","defaultCode":""},{"title":"(array) Search","statement":"Given an <code>int[] x<\/code> and a <code>int search<\/code>, determine if search is in x. Print the first position you found search (the index). If you did not find it, print -1. <br \/><br \/><em>Learn more about arrays at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/385\/-1","defaultCode":""},{"title":"(array) Max-Min","statement":"Given an <code>int[] x<\/code> print the difference between the largest and the smallest number in the array.<br \/><br \/><em>Learn more about arrays at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/386\/-1","defaultCode":""},{"title":"(array) Array Mean","statement":"Given an <code>int[] x<\/code>, determine the average (mean) of the numbers and print the decimal result. Use a double, and be wary of integer division.<br \/><br \/><em>Learn more about arrays at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/loops<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/387\/-1","defaultCode":""},{"title":"(charAt) Ends in s\/S","statement":"You are given <code>String x<\/code>. Print true if x ends in either a lower case or upper case S, false otherwise. <em>You can get the first character from the string with the expression <code>x.charAt(0)<\/code>. Second character would be <code>x.charAt(1)<\/code> Use x.length()-1 in place of the number to get the last character. Remember characters are single quoted.<\/em><br \/><br \/><em>Learn more about strings at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/strings<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/388\/-1","defaultCode":""},{"title":"(charAt) Balanced ()","statement":"You are given <code>String x<\/code> where every character is an open or close parenthesis. Print whether the parenthesis are balanced or not as a boolean. <em>For parenthesis to be balanced, there shoudl be an equal number of open and close parenthesis. Additionally, there should be equal or less close parenthesis than open parenthesis at every point.<\/em><br \/><br \/><em>Learn more about strings at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/strings<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/389\/-1","defaultCode":""},{"title":"(charAt) Palindrome","statement":"You are given <code>String x<\/code>. Print true if x is the same spelled forwards as backwards, false otherwise. You do not need to handle upper\/lower case (Rar is not a palindrome for this problem, but rar is).<br \/><br \/><em>Learn more about strings at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/strings<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/390\/-1","defaultCode":""},{"title":"(charAt) ROT13","statement":"ROT13 is the caesar cipher with a password of 13. Apply ROT13 to the <code>String x<\/code> (assume x is all lower case letters) and print the encrypted string. For example \"abc\"-&gt;\"nop\"<br \/><br \/><em>Learn more about strings at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/strings<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/391\/-1","defaultCode":""},{"title":"(split) Reverse","statement":"Given a sentence like <code>String x = \"insanity is doing the same thing over and over and expecting different results\"<\/code>, reverse the words and print: <code>\"results different expecting and over and over thing same the doing is insanity\";<\/code>. You can treat \"hello,\" as a word. Be careful not to add a space before or after the sentence.<br \/><br \/><em>Learn more about strings at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/strings<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/392\/-1","defaultCode":""},{"title":"(func) addNumbers()","statement":"Assume someone has the following code:\n<pre class='brush: java; gutter: false;'>\nint x = addNumbers(5,6);\nprintln(x); \/\/this should output 11\n<\/pre>\n\t\t\tWrite the addNumbers function that will add its two integer arguments.<br \/><br \/><em>Learn more about functions at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/functions<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/393\/-1","defaultCode":"int addNumbers( ???? ) {\n\treturn ???? ;\n}"},{"title":"(func) reverse()","statement":"Unlike primitive variable types (int, boolean, float, double, ...), array <strong>references<\/strong> are passed into functions by value (instead of the values IN the array being passed by value). What it means is that if you modify the array in the function, it modifies the original array that was given to it. \n\t\t\t<br\/><br\/>\n\t\t\tAssume someone has the following code (such as in a processing void setup(){}):\n\t\t\t\n<pre class='brush: java; gutter: false;'>\nint[] x = {1,2,3,4,5};\nreverse(x);\n\/\/now x should be {5,4,3,2,1}\n<\/pre>\n\t\t\tWrite the function, reverse, with return type void.","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/394\/-1","defaultCode":"void reverse( ???? ) {\n\treturn ???? ;\n}"},{"title":"(list) hasDuplicates()","statement":"Create a a function that returns true if there are any duplicate numbers in the ArrayList x:\n<pre class='brush: java; gutter: false;'>\nboolean hasDuplicates(ArrayList&lt;Integer&gt; x) {\n}\n<\/pre>\nYou will probably use a loop within a loop to search if any two values are the same.<br \/><br \/><em>Learn more about lists at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/collections<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/395\/-1","defaultCode":"boolean hasDuplicates(ArrayList&lt;Integer&gt; x) {\n\n\treturn ???? ;\n}"},{"title":"(Map) Add up keys","statement":"You are passed a HashMap&lt;Integer, Integer&gt; x which contains pairs such as 6=&gt;42 113=&gt;5. Add up all the keys in the map (in this case 6 + 113 = 119). You should loop through all the keys in the following manner:\n<pre class='brush: java; gutter: false;'>\nfor(Integer key : x.keySet()) {\n  \/\/use key\n}\n<\/pre>\n<br \/><br \/><em>Learn more about maps at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/collections<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/396\/-1","defaultCode":"int sumKeys(HashMap&lt;Integer,Integer&gt; x) {\n}"},{"title":"(recurse) Combos","statement":"Write a recursive function that computes every combination of a sequence of characters. For each combination, you should run addAnswer(String result). For example, for the argument \"ABC\", you should run addAnswer(\"\") addAnswer(\"C\") addAnswer(\"B\") addAnswer(\"BC\") addAnswer(\"A\") addAnswer(\"AC\") addAnswer(\"AB\") addAnswer(\"ABC\"). You will need to write a help function in addition to this one. <em>Note: The grader will treat \"CBA\" as incorrect, so make sure to output letters in the right order. The grader does not care what order you print sets, just items within a set. Make sure to include the empty set (\"\") as an answer. You may write a helper function in addition to the answer function<\/em><br \/><br \/><em>Learn more about recursion and combinatorics at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/recursion<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/397\/-1","defaultCode":"void combos(String letters) {\n    \/\/run addAnswer in the helper function for each result rather than println\n}"},{"title":"(recurse) Variations","statement":"Write recursive function(s) that computes every variation of a fixed length. For example, if your argument was \"ABC\" and 2, then it would run addAnswer(\"AA\") addAnswer(\"AB\") addAnswer(\"AC\") addAnswer(\"BA\") addAnswer(\"BB\") addAnswer(\"BC\") addAnswer(\"CA\") addAnswer(\"CB\") addAnswer(\"CC\")<br \/><br \/><em>Learn more about recursion and combinatorics at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/recursion<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/398\/-1","defaultCode":"void variations(String letters, int length) {\n  \/\/run addAnswer in helper function\n}"},{"title":"(recurse) Permute","statement":"Write recursive function(s) that computes every permutation of a fixed length. For example, if your argument was \"ABC\" and 2, then it would run addAnswer(\"AB\") addAnswer(\"AC\") addAnswer(\"BA\") addAnswer(\"BC\") addAnswer(\"CA\") addAnswer(\"CB\")<br \/><br \/><em>Learn more about recursion and combinatorics at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/recursion<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/399\/-1","defaultCode":"void permutations(String letters, int length) {\n  \/\/run addAnswer in helper function\n}"},{"title":"(flood) Count Flood","statement":"You are given a two dimensional array of characters as an argument, such as the one commented below:\n<pre class='brush: java; gutter: false;'>\n\/\/##....###\n\/\/#...###..\n\/\/#.#..#..s\n\/\/####.#...\n\/\/##...####\n<\/pre>\nAs you can see, one of the positions is marked with a lower case 's', signifying the start position. Your function should return how many dots \".\" are reachable from the start position, assuming you can go up down right and left. Assume you cannot move onto a pound symbol \"#\", and assume you cannot move diagonally. You may find this testing code useful:\n<pre class='brush: java; gutter: false;'>\nString map = \"##....###!#...###..!#.#..#..s!####.#...!##...####\";\nString[] lines = map.split(\"!\");\nchar[][] grid = new char[lines.length][lines[0].length()];\nfor (int j=0;j&lt;grid.length;j++) for (int i=0;i&lt;grid[j].length;i++)\n\tgrid[j][i] = lines[j].charAt(i);\n\/\/..use grid\n<\/pre>\n<br \/><br \/><em>Learn more about recursion and combinatorics at the kittybyte textbook: http:\/\/www.kittybyte.com\/textbook\/recursion<\/em>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/400\/-1","defaultCode":"int countMap(char[][] grid) {\n\t\/\/get rows from grid.length\n\t\/\/get columns from grid[0].length\n\t\/\/search for the start position\n\t\/\/recursively count from that position\n}"},{"title":"(dijkstra) Dijkstra","statement":"You are given a graph with the following node class for a directed graph:\n<pre class='brush: java; gutter: false;'>\nclass Node implements Comparable&lt;Node&gt; {\n\tpublic int value;\n\tpublic Integer dist; \/\/null is infinity\n\tpublic Map&lt;Node,Integer&gt; neighbors = new HashMap&lt;Node,Integer&gt;();\n\tpublic int compareTo(Node other) {\n\t\tif(dist == null && other.dist == null) return 0;\n\t\telse if(other.dist == null) return -1;\n\t\telse if(this.dist == null) return 1;\n\t\telse return dist.compareTo(other.dist);\n\t}\n}\n<\/pre>\nWrite a function that finds the shortest path from one node to another. Return -1 if there is no path from the beginning to the end. The compareTo and Comparable above allow you to create a PriorityQueue generic on Node to keep track of the nodes.","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/401\/-1","defaultCode":"public int dijkstra(Node a, Node b) {\n}"},{"title":"(dijkstra) Diameter","statement":"The diameter of a graph is the longest shortest-path between any two nodes. In other words, you perform dijkstra for every pair of nodes and maximize. You are given a graph with the following node class for a directed graph:\n<pre class='brush: java; gutter: false;'>\nclass Node&lt;T&gt; {\n\tpublic T value;\n\tpublic Integer dist; \/\/null is infinity\n\tpublic Map&lt;Node&lt;T&gt; ,Integer&gt; neighbors = new HashMap&lt;Node&lt;T&gt; ,Integer&gt;();\n}\n<\/pre>\nWrite a function that finds the graph diameter. You will need to also include (probably a separate function) that performs dijkstra. This dijkstra function should create a priority queue in the following manner:\n<pre class='brush: java; gutter: false;'>\nPriorityQueue&lt;Node&lt;T&gt;&gt; pq = new PriorityQueue&lt;Node&lt;T&gt; &gt; (1, new Comparator&lt;Node&lt;T&gt;&gt;() {\n\tpublic int compare(Node&lt;T&gt; a, Node&lt;T&gt; b) {\n\t\tif(a.dist == null && b.dist == null) return 0;\n\t\telse if(b.dist == null) return -1;\n\t\telse if(a.dist == null) return 1;\n\t\telse return a.dist.compareTo(b.dist);\n\t}\n});\n<\/pre>","submitURL":"http:\/\/www.kapparate.com\/coder\/submit\/97\/402\/-1","defaultCode":"public &lt;T&gt; int diameter(ArrayList&lt;Node&lt;T&gt;&gt; graph) {\n}"}]
